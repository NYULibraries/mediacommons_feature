<?php

/**
 * @file
 * Install and related hooks for apachesolr_search.
 */

/**
 * Implements hook_enable().
 * Set DEV Discovery as default search enviorment
 */
function mediacommons_solr_enable() {
  
  module_load_include('inc', 'apachesolr', 'apachesolr.index');

  // environment data
  $conf = array(
    'env_id' => 'solr',
    'name' => 'MediaCommons Apache Solr server',
    'url' => 'http://dev-discovery.dlib.nyu.edu:8080/solr3_discovery/mediacommons'
  );
  // set the environment
  db_update('apachesolr_environment')->fields($conf)->execute();
  
  // set a Apache Solr hash
  if ($hash = variable_get('mediacommons_project')) {
    variable_set('apachesolr_site_hash', $hash);
  }  

  $blacklisted = array(
    'front_page_post'
  );

  $bundles = array_keys(node_type_get_types());

  $bundles_to_index = array_diff($bundles, $blacklisted);

  $transaction = db_transaction();

  $env_id = 'solr';

  $entity_type = 'node';

  variable_set('search_active_modules', array('apachesolr_search'));

  variable_set('search_default_module', 'apachesolr_search');  

  try {

    db_delete('apachesolr_index_bundles')
      ->condition('env_id', $env_id)
      ->condition('entity_type', $entity_type)
      ->execute();

    if ($bundles_to_index) {
      $insert = db_insert('apachesolr_index_bundles')
        ->fields(array('env_id', 'entity_type', 'bundle'));
      foreach ($bundles_to_index as $bundle) {
        $insert->values(array(
          'env_id' => $env_id,
          'entity_type' => $entity_type,
          'bundle' => $bundle,
        ));
      }
      $insert->execute();
    }
  }
  catch (Exception $e) {
    $transaction->rollback();
    // Re-throw the exception so we are aware of the failure.
    throw $e;
  }
  
  cache_clear_all();

}

/**
 * Implements hook_uninstall().
 */
function mediacommons_solr_uninstall() {
  variable_del('apachesolr_site_hash');
}
